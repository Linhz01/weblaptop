import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { A11yModule } from '@angular/cdk/a11y';
import { OffcanvasComponent } from './offcanvas/offcanvas.component';
import { OffcanvasBodyComponent } from './offcanvas-body/offcanvas-body.component';
import { OffcanvasHeaderComponent } from './offcanvas-header/offcanvas-header.component';
import { OffcanvasTitleDirective } from './offcanvas-title/offcanvas-title.directive';
import { OffcanvasToggleDirective } from './offcanvas-toggle/offcanvas-toggle.directive';
import { OffcanvasService } from './offcanvas.service';
import { BackdropService } from '../backdrop/backdrop.service';
import * as i0 from "@angular/core";
export class OffcanvasModule {
}
OffcanvasModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: OffcanvasModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
OffcanvasModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: OffcanvasModule, declarations: [OffcanvasComponent,
        OffcanvasBodyComponent,
        OffcanvasHeaderComponent,
        OffcanvasTitleDirective,
        OffcanvasToggleDirective], imports: [CommonModule,
        A11yModule], exports: [OffcanvasComponent,
        OffcanvasBodyComponent,
        OffcanvasHeaderComponent,
        OffcanvasTitleDirective,
        OffcanvasToggleDirective] });
OffcanvasModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: OffcanvasModule, providers: [
        OffcanvasService,
        BackdropService
    ], imports: [[
            CommonModule,
            A11yModule
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.3", ngImport: i0, type: OffcanvasModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        OffcanvasComponent,
                        OffcanvasBodyComponent,
                        OffcanvasHeaderComponent,
                        OffcanvasTitleDirective,
                        OffcanvasToggleDirective
                    ],
                    exports: [
                        OffcanvasComponent,
                        OffcanvasBodyComponent,
                        OffcanvasHeaderComponent,
                        OffcanvasTitleDirective,
                        OffcanvasToggleDirective
                    ],
                    imports: [
                        CommonModule,
                        A11yModule
                    ],
                    providers: [
                        OffcanvasService,
                        BackdropService
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2ZmY2FudmFzLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmV1aS1hbmd1bGFyL3NyYy9saWIvb2ZmY2FudmFzL29mZmNhbnZhcy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRS9DLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQ25GLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBQ3pGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ3RGLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBQ3pGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQzs7QUEwQi9ELE1BQU0sT0FBTyxlQUFlOzs0R0FBZixlQUFlOzZHQUFmLGVBQWUsaUJBdEJ4QixrQkFBa0I7UUFDbEIsc0JBQXNCO1FBQ3RCLHdCQUF3QjtRQUN4Qix1QkFBdUI7UUFDdkIsd0JBQXdCLGFBVXhCLFlBQVk7UUFDWixVQUFVLGFBUlYsa0JBQWtCO1FBQ2xCLHNCQUFzQjtRQUN0Qix3QkFBd0I7UUFDeEIsdUJBQXVCO1FBQ3ZCLHdCQUF3Qjs2R0FXZixlQUFlLGFBTGY7UUFDVCxnQkFBZ0I7UUFDaEIsZUFBZTtLQUNoQixZQVBRO1lBQ1AsWUFBWTtZQUNaLFVBQVU7U0FDWDsyRkFNVSxlQUFlO2tCQXhCM0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osa0JBQWtCO3dCQUNsQixzQkFBc0I7d0JBQ3RCLHdCQUF3Qjt3QkFDeEIsdUJBQXVCO3dCQUN2Qix3QkFBd0I7cUJBQ3pCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxrQkFBa0I7d0JBQ2xCLHNCQUFzQjt3QkFDdEIsd0JBQXdCO3dCQUN4Qix1QkFBdUI7d0JBQ3ZCLHdCQUF3QjtxQkFDekI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osVUFBVTtxQkFDWDtvQkFDRCxTQUFTLEVBQUU7d0JBQ1QsZ0JBQWdCO3dCQUNoQixlQUFlO3FCQUNoQjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQTExeU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9hMTF5JztcblxuaW1wb3J0IHsgT2ZmY2FudmFzQ29tcG9uZW50IH0gZnJvbSAnLi9vZmZjYW52YXMvb2ZmY2FudmFzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBPZmZjYW52YXNCb2R5Q29tcG9uZW50IH0gZnJvbSAnLi9vZmZjYW52YXMtYm9keS9vZmZjYW52YXMtYm9keS5jb21wb25lbnQnO1xuaW1wb3J0IHsgT2ZmY2FudmFzSGVhZGVyQ29tcG9uZW50IH0gZnJvbSAnLi9vZmZjYW52YXMtaGVhZGVyL29mZmNhbnZhcy1oZWFkZXIuY29tcG9uZW50JztcbmltcG9ydCB7IE9mZmNhbnZhc1RpdGxlRGlyZWN0aXZlIH0gZnJvbSAnLi9vZmZjYW52YXMtdGl0bGUvb2ZmY2FudmFzLXRpdGxlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBPZmZjYW52YXNUb2dnbGVEaXJlY3RpdmUgfSBmcm9tICcuL29mZmNhbnZhcy10b2dnbGUvb2ZmY2FudmFzLXRvZ2dsZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgT2ZmY2FudmFzU2VydmljZSB9IGZyb20gJy4vb2ZmY2FudmFzLnNlcnZpY2UnO1xuaW1wb3J0IHsgQmFja2Ryb3BTZXJ2aWNlIH0gZnJvbSAnLi4vYmFja2Ryb3AvYmFja2Ryb3Auc2VydmljZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIE9mZmNhbnZhc0NvbXBvbmVudCxcbiAgICBPZmZjYW52YXNCb2R5Q29tcG9uZW50LFxuICAgIE9mZmNhbnZhc0hlYWRlckNvbXBvbmVudCxcbiAgICBPZmZjYW52YXNUaXRsZURpcmVjdGl2ZSxcbiAgICBPZmZjYW52YXNUb2dnbGVEaXJlY3RpdmVcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIE9mZmNhbnZhc0NvbXBvbmVudCxcbiAgICBPZmZjYW52YXNCb2R5Q29tcG9uZW50LFxuICAgIE9mZmNhbnZhc0hlYWRlckNvbXBvbmVudCxcbiAgICBPZmZjYW52YXNUaXRsZURpcmVjdGl2ZSxcbiAgICBPZmZjYW52YXNUb2dnbGVEaXJlY3RpdmVcbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBBMTF5TW9kdWxlXG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIE9mZmNhbnZhc1NlcnZpY2UsXG4gICAgQmFja2Ryb3BTZXJ2aWNlXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIE9mZmNhbnZhc01vZHVsZSB7IH1cbiJdfQ==